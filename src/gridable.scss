// gridable.scss

@import 'common/variables';
@import 'common/mixins';

// Base
[#{$gridable-prefix}-grid] {
	@include gridable-grid;
}

// Visibility
[#{$gridable-prefix}-grid] {
	> [#{$gridable-prefix}-cell~="hide"] {
		@include gridable-hide;
	}

	> [#{$gridable-prefix}-cell~="show"] {
		@include gridable-show;
	}
}

// Wrapping
[#{$gridable-prefix}-grid], [#{$gridable-prefix}-grid~="wrap:on"] {
	@include gridable-wrap(on);
}

[#{$gridable-prefix}-grid~="wrap:off"] {
	@include gridable-wrap(off);
}

// Order
[#{$gridable-prefix}-grid], [#{$gridable-prefix}-grid~="order:normal"] {
	@include gridable-orientate(horizontal);
}

[#{$gridable-prefix}-grid~="order:reverse"] {
	@include gridable-orientate(horizontal, reverse);
}

// Direction
[#{$gridable-prefix}-grid], [#{$gridable-prefix}-grid~="direction:horizontal"] {
	@include gridable-orientate(horizontal);

	&[#{$gridable-prefix}-grid~="order:reverse"] {
		@include gridable-orientate(horizontal, reverse);
	}
}

[#{$gridable-prefix}-grid~="direction:vertical"] {
	@include gridable-orientate(vertical);

	&[#{$gridable-prefix}-grid~="order:reverse"] {
		@include gridable-orientate(vertical, reverse);
	}
}

// Alignment
[#{$gridable-prefix}-grid], [#{$gridable-prefix}-grid~="align:start"] {
	@include gridable-align(start);
}

[#{$gridable-prefix}-grid~="align:center"] {
	@include gridable-align(center);
}

[#{$gridable-prefix}-grid~="align:end"] {
	@include gridable-align(end);
}

[#{$gridable-prefix}-grid~="align:baseline"] {
	@include gridable-align(baseline);
}

[#{$gridable-prefix}-grid~="align:stretch"] {
	@include gridable-align(stretch);
}

[#{$gridable-prefix}-grid] {
	> [#{$gridable-prefix}-cell~="align:start"] {
		@include gridable-align(start, cell);
	}

	> [#{$gridable-prefix}-cell~="align:center"] {
		@include gridable-align(center, cell);
	}

	> [#{$gridable-prefix}-cell~="align:end"] {
		@include gridable-align(end, cell);
	}

	> [#{$gridable-prefix}-cell~="align:baseline"] {
		@include gridable-align(baseline, cell);
	}

	> [#{$gridable-prefix}-cell~="align:stretch"] {
		@include gridable-align(stretch, cell);
	}
}

// Justification
[#{$gridable-prefix}-grid], [#{$gridable-prefix}-grid~="justify:start"] {
	@include gridable-justify(start);
}

[#{$gridable-prefix}-grid~="justify:center"] {
	@include gridable-justify(center);
}

[#{$gridable-prefix}-grid~="justify:end"] {
	@include gridable-justify(end);
}

[#{$gridable-prefix}-grid~="justify:between"] {
	@include gridable-justify(between);
}

[#{$gridable-prefix}-grid~="justify:around"] {
	@include gridable-justify(around);
}

// Gutter
@each $key, $gutter in $gridable-gutters {
	@if $key == $gridable-gutter {
		[#{$gridable-prefix}-grid] {
			@include gridable-gutter($key);
		}
	}

	[#{$gridable-prefix}-grid~="gutter:#{$key}"] {
		@include gridable-gutter($key);
	}
}

// Width
@for $width from 1 through $gridable-columns {
	[#{$gridable-prefix}-grid~="width:#{$width}"] > *,
	[#{$gridable-prefix}-grid] > [#{$gridable-prefix}-cell~="width:#{$width}"] {
		@include gridable-width($width);
	}
}

// Position
[#{$gridable-prefix}-grid] {
	> [#{$gridable-prefix}-cell~="position:start"] {
		@include gridable-position(start);
	}

	> [#{$gridable-prefix}-cell~="position:end"] {
		@include gridable-position(end);
	}

	@for $position from 1 through $gridable-columns {
		> [#{$gridable-prefix}-cell~="position:#{$position}"] {
			@include gridable-position($position);
		}
	}
}

// Offset
[#{$gridable-prefix}-grid] {
	> [#{$gridable-prefix}-cell~="offset:0"] {
		@include gridable-offset(0);
	}

	@for $offset from 1 through $gridable-columns {
		> [#{$gridable-prefix}-cell~="offset:#{$offset}"] {
			@include gridable-offset($offset);
		}

		> [#{$gridable-prefix}-cell~="offset:-#{$offset}"] {
			@include gridable-offset(-$offset);
		}
	}
}

// Breakpoints
@each $name, $selector in $gridable-breakpoints {
	@include gridable-breakpoint($name) {

		// Visibility
		[#{$gridable-prefix}-grid] {
			> [#{$gridable-prefix}-cell~="hide.#{$name}"] {
				@include gridable-hide;
			}

			> [#{$gridable-prefix}-cell~="show.#{$name}"] {
				@include gridable-show;
			}
		}

		// Wrapping
		[#{$gridable-prefix}-grid~="wrap.#{$name}:on"] {
			@include gridable-wrap(on);
		}
		[#{$gridable-prefix}-grid~="wrap.#{$name}:off"] {
			@include gridable-wrap(off);
		}

		// Order
		[#{$gridable-prefix}-grid~="order.#{$name}:normal"] {
			@include gridable-orientate(horizontal);
		}
		[#{$gridable-prefix}-grid~="order.#{$name}:reverse"] {
			@include gridable-orientate(horizontal, reverse);
		}

		// Direction
		[#{$gridable-prefix}-grid~="direction.#{$name}:horizontal"] {
			@include gridable-orientate(horizontal);

			&[#{$gridable-prefix}-grid~="order:reverse"],
			&[#{$gridable-prefix}-grid~="order.#{$name}:reverse"] {
				@include gridable-orientate(horizontal, reverse);
			}
		}
		[#{$gridable-prefix}-grid~="direction.#{$name}:vertical"] {
			@include gridable-orientate(vertical);

			&[#{$gridable-prefix}-grid~="order:reverse"],
			&[#{$gridable-prefix}-grid~="order.#{$name}:reverse"] {
				@include gridable-orientate(vertical, reverse);
			}
		}

		// Alignment
		[#{$gridable-prefix}-grid~="align.#{$name}:start"] {
			@include gridable-align(start);
		}
		[#{$gridable-prefix}-grid~="align.#{$name}:center"] {
			@include gridable-align(center);
		}
		[#{$gridable-prefix}-grid~="align.#{$name}:end"] {
			@include gridable-align(end);
		}
		[#{$gridable-prefix}-grid~="align.#{$name}:baseline"] {
			@include gridable-align(baseline);
		}
		[#{$gridable-prefix}-grid~="align.#{$name}:stretch"] {
			@include gridable-align(stretch);
		}

		[#{$gridable-prefix}-grid] {
			> [#{$gridable-prefix}-cell~="align.#{$name}:start"] {
				@include gridable-align(start, cell);
			}

			> [#{$gridable-prefix}-cell~="align.#{$name}:center"] {
				@include gridable-align(center, cell);
			}

			> [#{$gridable-prefix}-cell~="align.#{$name}:end"] {
				@include gridable-align(end, cell);
			}

			> [#{$gridable-prefix}-cell~="align.#{$name}:baseline"] {
				@include gridable-align(baseline, cell);
			}

			> [#{$gridable-prefix}-cell~="align.#{$name}:stretch"] {
				@include gridable-align(stretch, cell);
			}
		}

		// Justification
		[#{$gridable-prefix}-grid~="justify.#{$name}:start"] {
			@include gridable-justify(start);
		}
		[#{$gridable-prefix}-grid~="justify.#{$name}:center"] {
			@include gridable-justify(center);
		}
		[#{$gridable-prefix}-grid~="justify.#{$name}:end"] {
			@include gridable-justify(end);
		}
		[#{$gridable-prefix}-grid~="justify.#{$name}:between"] {
			@include gridable-justify(between);
		}
		[#{$gridable-prefix}-grid~="justify.#{$name}:around"] {
			@include gridable-justify(around);
		}

		// Gutter
		@each $key, $gutter in $gridable-gutters {
			[#{$gridable-prefix}-grid~="gutter.#{$name}:#{$key}"] {
				@include gridable-gutter($key);
			}
		}

		// Widths
		@for $width from 1 through $gridable-columns {
			[#{$gridable-prefix}-grid~="width.#{$name}:#{$width}"] > *,
			[#{$gridable-prefix}-grid] > [#{$gridable-prefix}-cell~="width.#{$name}:#{$width}"] {
				@include gridable-width($width);
			}
		}

		// Positions
		[#{$gridable-prefix}-grid] {
			> [#{$gridable-prefix}-cell~="position.#{$name}:start"] {
				@include gridable-position(start);
			}

			> [#{$gridable-prefix}-cell~="position.#{$name}:end"] {
				@include gridable-position(end);
			}

			@for $position from 1 through $gridable-columns {
				> [#{$gridable-prefix}-cell~="position.#{$name}:#{$position}"] {
					@include gridable-position($position);
				}
			}
		}

		// Offset
		[#{$gridable-prefix}-grid] {
			> [#{$gridable-prefix}-cell~="offset.#{$name}:0"] {
				@include gridable-offset(0);
			}

			@for $offset from 1 through $gridable-columns {
				> [#{$gridable-prefix}-cell~="offset.#{$name}:#{$offset}"] {
					@include gridable-offset($offset);
				}

				> [#{$gridable-prefix}-cell~="offset.#{$name}:-#{$offset}"] {
					@include gridable-offset(-$offset);
				}
			}
		}
	}
}
